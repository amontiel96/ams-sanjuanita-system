{
    "sourceFile": "src/Modelo/MBD.java",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1723876707497,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1723876707497,
            "name": "Commit-0",
            "content": "/*\r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\npackage Modelo;\r\n\r\nimport java.io.DataInputStream;\r\nimport java.io.FileInputStream;\r\nimport java.io.RandomAccessFile;\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.ResultSetMetaData;\r\nimport java.sql.SQLException;\r\nimport java.sql.Statement;\r\nimport javax.swing.JOptionPane;\r\nimport javax.swing.table.DefaultTableModel;\r\n\r\n\r\n/**\r\n *\r\n * @author Arturo\r\n */\r\npublic class MBD {\r\n    public static String usuario;\r\n    public static String pwd;\r\n    public static String host;\r\n    public static String bd;\r\n    public static RandomAccessFile rf;\r\n    ClsMDatosConexion dat=new ClsMDatosConexion();\r\n    String url;\r\n    public static Connection con; // conexion\r\n    public Statement stmt;// se crea una sesion\r\n    ResultSet rs;// se almacena los datos de una consulta\r\n    public ResultSetMetaData rsMeta;// obtiene datos de las tablas de bd\r\n    PreparedStatement pstm;// preparar sesiones\r\n   \r\n    public   MBD()\r\n    {\r\n               \r\n    }\r\n    \r\n     public Connection getConnection()\r\n    {\r\n       try\r\n        {\r\n            \r\n           rf = new RandomAccessFile(\"conexion.txt\", \"r\");\r\n           host=rf.readUTF();\r\n           bd=rf.readUTF();\r\n           usuario=rf.readUTF();\r\n           pwd=rf.readUTF();\r\n            \r\n               \r\n             Class.forName(\"oracle.jdbc.OracleDriver\");// crargamos el driver la poder conecctarse al manejador de la base\r\n            url=\"jdbc:oracle:thin:@\"+host+\":1521:\"+bd;\r\n             con =DriverManager.getConnection(url,usuario,pwd); //Agregamos el url del  servidor y el usuario y password para la conexion\r\n            \r\n            \r\n       \r\n        }\r\n        catch(Exception ex)\r\n        {\r\n             JOptionPane.showMessageDialog(null,ex.toString());\r\n           \r\n        }\r\n       return con;\r\n    }\r\n    \r\n    public  boolean conectar()\r\n    {\r\n        \r\n       \r\n         try\r\n        {\r\n            \r\n           rf = new RandomAccessFile(\"conexion.txt\", \"r\");\r\n           host=rf.readUTF();\r\n           bd=rf.readUTF();\r\n           usuario=rf.readUTF();\r\n           pwd=rf.readUTF();\r\n            \r\n               \r\n             Class.forName(\"oracle.jdbc.OracleDriver\");// crargamos el driver la poder conecctarse al manejador de la base\r\n            url=\"jdbc:oracle:thin:@\"+host+\":1521:\"+bd;\r\n             con =DriverManager.getConnection(url,usuario,pwd); //Agregamos el url del  servidor y el usuario y password para la conexion\r\n            \r\n            \r\n            return true;\r\n        }\r\n        catch(Exception ex)\r\n        {\r\n            return false;\r\n        }\r\n       \r\n        \r\n    }\r\n    public ResultSet consultar(String sql)//Hacer consultas\r\n    {\r\n        JOptionPane.showMessageDialog(null, sql);\r\n       try {\r\n           \r\n            stmt =  con.createStatement(); ///creamos la  sesion para el proceso\r\n            JOptionPane.showMessageDialog(null, \"si lo hace\");\r\n            rs = stmt.executeQuery(sql);  ///se almacena Resulset... del proceso que se ejecutara\r\n        }\r\n       catch (SQLException ex)\r\n       {\r\n            JOptionPane.showMessageDialog(null, \"ERROR CONSULTA \" + ex.getMessage(), \"DATAGRID\", JOptionPane.INFORMATION_MESSAGE);\r\n       }\r\n         return rs; //se retorna el valor guardado en resultset\r\n    }\r\n      //Metodo para Insertar, Eliminar, Modificar y Ejecutar Procedimientos Almacenados\r\n      public void procesos(String sql) throws Exception\r\n    {\r\n        try {\r\n            stmt =  con.createStatement();\r\n            stmt.execute(sql);\r\n        } catch (SQLException ex){\r\n           System.out.println(\"Error de proceso: \"+ ex);\r\n        }     \r\n    }\r\n       //Metodo para llenar una tabla\r\n    public Object [][] getDatos(String comand2,String[] colu) {\r\n     \r\n      Object[][] data= new Object[0][0];\r\n          int filas=0;\r\n    //realizamos la consulta sql y llenamos los datos en \"Object\"\r\n      try{    \r\n          pstm =con.prepareStatement(comand2);\r\n          rs = pstm.executeQuery();\r\n         while(rs.next()){\r\n             filas++;\r\n         }\r\n          rs.close();\r\n          pstm = con.prepareStatement(comand2);\r\n          rs =  pstm.executeQuery();\r\n          \r\n          data= new Object[filas][colu.length];\r\n         int i = 0,y;\r\n         while(rs.next()){\r\n             for(y=0;y<colu.length;y++)\r\n             {\r\n                 data[i][y] = rs.getString(colu[y]);\r\n             }\r\n            i++;\r\n         }\r\n         rs.close();\r\n         //return data;\r\n          }catch(SQLException e){\r\n              JOptionPane.showMessageDialog(null, e.getMessage());\r\n    }\r\n        return data;\r\n }   \r\n\r\n public ResultSet Consulta_SET(String consulta) throws ClassNotFoundException, SQLException \r\n    {  \r\n            try \r\n            {\r\n                Statement s = con.createStatement();\r\n                rs = s.executeQuery(consulta);\r\n            }\r\n            catch (SQLException e) \r\n            {\r\n                System.out.println(\"Error de MySQL: \" + e.getMessage());\r\n            } \r\n            catch (Exception e) \r\n            {\r\n              System.out.println(\"Error inesperado: \" + e.getMessage());\t\r\n            }\r\n            return rs;\r\n    }\r\n\r\n    //Metodo para el llenado del combobox\r\n    public String[][] LlenarCombos(String cons)\r\n     {\r\n         JOptionPane.showMessageDialog(null, \"hola\");\r\n        String [][] datoscombo = new String [0][0];\r\n        int rows=0, cols, f,c;\r\n        try\r\n        {\r\n            \r\n            \r\n\t    pstm =con.prepareStatement(cons);\r\n            rs = pstm.executeQuery();\r\n            while(rs.next())\r\n            {\r\n                     \r\n                rows++;\r\n            }\r\n            rs.beforeFirst();\r\n            rsMeta = rs.getMetaData();\r\n            cols = rsMeta.getColumnCount();\r\n            datoscombo = new String[rows][cols];\r\n            f=0;\r\n            while(rs.next())\r\n            {\r\n                for(c=0;c<cols;c++)\r\n                {\r\n                    datoscombo[f][c]=rs.getString(c+1);\r\n                }\r\n                f++;\r\n            }\r\n        }\r\n        catch (SQLException e)\r\n        {\r\n        }\r\n        return datoscombo;\r\n    }\r\n    public int ultimoId(String consulta) throws ClassNotFoundException, SQLException{\r\n    int id=0;\r\n    try \r\n    {\r\n        stmt =  con.createStatement();\r\n        int registro=0;\r\n        rs =  stmt.executeQuery(consulta);\r\n                \r\n        while(rs.next())\r\n        {\r\n        registro++;\r\n        }\r\n        rs.close();\r\n        rs =  stmt.executeQuery(consulta);\r\n               \r\n        int i=0;\r\n        while(rs.next())\r\n        {\r\n            id=Integer.parseInt(rs.getString(1));\r\n            i++;\r\n        }\r\n              \r\n        } catch (SQLException | NullPointerException ex) {\r\n        System.out.println(ex.getMessage());\r\n           \r\n        }\r\n        catch (NumberFormatException e) {\r\n        }\r\n        return id;\r\n     }\r\n}\r\n"
        }
    ]
}